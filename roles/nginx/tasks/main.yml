---
##############################################################################
# Create the virtualenv where we will host the drastic-web app
##############################################################################

- name: Install Nginx package
  package: name=nginx state=present
  when: ansible_connection != 'docker'

- name: Allow httpd to connect upstream on SELinux
  become: yes
  become_user: root
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
  block:
    - command: setsebool -P httpd_can_network_relay 1
    - command: setsebool -P httpd_can_network_connect 1
  tags: init

- name: Delete default nginx config for enabled site
  file: path=/etc/nginx/conf.d/default.conf state=absent

- name: Delete default nginx config for enabled site
  file: path=/etc/nginx/sites-enabled/default state=absent

- name: Create Nginx main config
  copy: src=nginx.conf dest=/etc/nginx/nginx.conf

- name: Create DRAS-TIC HTTP nginx config
  template: src=drastic-web.nginx dest=/etc/nginx/conf.d/drastic_http.conf
  when: not https_mode

- name: Create DRAS-TIC HTTPS nginx config
  template: src=drastic-web-ssl.nginx dest=/etc/nginx/conf.d/drastic_https.conf
  when: https_mode

- name: Create NGINX server locations include folder
  file: path=/etc/nginx/location-include state=directory

- name: Create SSL directory for nginx
  file: path=/etc/nginx/ssl state=directory
  when: https_mode

- name: Retrieves facts for SSL certificate
  stat: path=/etc/nginx/ssl/nginx.crt
  register: ssl_certificate
  when: https_mode

- name: Retrieves facts for SSL key
  stat: path=/etc/nginx/ssl/nginx.key
  register: ssl_key
  when: https_mode

- name: install packages for drastic web-ui
  package: name=python-pip state=installed
  when: https_mode and ((ssl_certificate.stat.exists == False) or (ssl_key.stat.exists == False))

- name: Install Global Python modules
  pip:
    name=pexpect
  when: https_mode and ((ssl_certificate.stat.exists == False) or (ssl_key.stat.exists == False))

- name: Self-sign SSL Certificate when not present
  expect:
    command: openssl req -new -x509 -sha256 -newkey rsa:2048 -days 365 -nodes -out nginx.crt -keyout nginx.key
    chdir: /etc/nginx/ssl
    responses:
      Country Name (.*): "US"
      State (.*): "Maryland"
      Locality (.*): "College Park"
      Organization Name (.*): "University of Maryland"
      Organizational Unit Name(.*): "School of Information Studies"
      Common Name (.*): "Team Drastic"
      Email (.*): "jansen@umd.edu"
  when: https_mode and ((ssl_certificate.stat.exists == False) or (ssl_key.stat.exists == False))

- name: Start nginx
  systemd: name=nginx state=restarted enabled=yes daemon-reload=yes
  when: ansible_connection != 'docker'
