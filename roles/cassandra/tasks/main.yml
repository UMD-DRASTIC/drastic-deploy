---
##############################################################################
# Java
# This must be Oracle's Java, and also should use libjna for performance.
##############################################################################

- name: Check Cassandra data directories exist
  stat: path={{ item }}
  register: st
  with_items: '{{ cassandra_data_dirs }}'

- name: Complain if Cassandra data directories do not exist
  fail: msg='Cassandra data directory {{ item.item }} does not exist or is not set properly'
  when: item.stat.isdir is not defined or not item.stat.isdir
  with_items: "{{ st.results }}"

# - name: Install Python APT library (required for oracle-java8 installer)
#   apt: pkg=python-apt state=installed update_cache=yes force=yes
#   become: yes

# - name: Add PPA for Oracle Java 8
#   apt_repository: repo='ppa:webupd8team/java' state=present
#   become: yes
#
# - name: Select and agree to licence
#   debconf: name='oracle-java8-installer' question='shared/accepted-oracle-license-v1-1' value='true' vtype='select'
#   become: yes

- name: Install packaged dependencies
  become: yes
  package: name={{ item }} state=latest
  with_items:
    # - oracle-java8-installer
    - openjdk-8-jdk
    - libjna-java
    - python-pip
    - git
    - curl
    - ntp
    # For client machine ...
    - libev4
    - libev-dev
    - build-essential
    - python-dev
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- yum: name=epel-release state=present
  become: yes
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
- name: Install packaged dependencies
  become: yes
  package: name={{ item }} state=latest
  with_items:
    - java-1.8.0-openjdk
    - jna
    - python-pip
    - git
    - curl
    - ntp
    # For client machine ...
    - libev
    - libev-devel
    - python-devel
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

##############################################################################
# Cassandra or Datastax Enterprise
##############################################################################

- name: Install Cassandra (open source)
  include: cassandra_install.yml
  when: not use_datastax

- name: Install Datastax Enterprise
  include: datastax_install.yml
  when: use_datastax

##############################################################################
# Machine Environment for Cassandra
##############################################################################
- name: Set Virtual Memory Resource Limit
  lineinfile:
    dest: /etc/sysctl.conf
    line: "vm.max_map_count = 1048575"
  become: yes

- name: Enable PAM Session Limits
  lineinfile:
    dest: /etc/pam.d/su
    line: "session    required   pam_limits.so"
    insertafter: "# session    required   pam_limits.so"
  become: yes

- name: Remove Swap Space
  lineinfile:
    dest: /etc/fstab
    state: absent
    regexp: "  swap  "
  become: yes

- name: Make resource limits effective
  become: yes
  command: sysctl -p

# Directories were already checked to exist at the top. We don't want to create
# new directories when remote volumes are not properly mounted yet.
- name: Set ownership and permissions of Cassandra data directory
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: cassandra
    group: cassandra
    recurse: yes
  become: yes
  with_items: '{{ cassandra_data_dirs }}'

- name: Create Cassandra log directory
  file:
    path: /var/log/cassandra/log
    state: directory
    mode: 0770
    owner: cassandra
  become: yes

- name: Restart services
  meta: flush_handlers
