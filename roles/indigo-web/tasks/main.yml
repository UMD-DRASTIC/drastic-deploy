---
##############################################################################
# Create the virtualenv where we will host the indigo-web app
##############################################################################

- name: update apt-cache
  apt: update_cache=yes
  sudo: true

- name: install packages for indigo web-ui
  apt: pkg={{ item }} state=installed
  with_items:
    - nginx
    - expect
    - libldap2-dev
    - libsasl2-dev
  sudo: true

- name: Manually create the webapp virtualenv
  command: virtualenv "{{ install_dir }}/web" creates="{{ install_dir }}/web"

- name: Clone git repo
#  git: repo="/home/alloy/tmp/indigo_git/indigo-web.git"
  git: repo="git@bitbucket.org:archivea/indigo-web.git"
       dest="{{ install_dir }}/web/project"
       key_file="{{ install_dir }}/.ssh/indigo_deployment_private_key"
       accept_hostkey=yes
       force=yes
       update=yes

- name: Install requirements
  pip:
    requirements="{{ install_dir }}/web/project/requirements.txt"
    virtualenv="{{ install_dir }}/web"

- name: Install indigo lib into webapp
  shell: "{{ install_dir }}/web/bin/python setup.py develop"
  args:
    chdir: "{{ install_dir }}/indigo"

- name: Copy init script
  template: src=indigo-web.conf dest=/etc/init/indigo-web.conf
  sudo: true

- name: Copy nginx config
  template: src=indigo-web.nginx dest=/etc/nginx/sites-enabled/default
  sudo: true

- name: Create the cassandra database
  command: "{{ install_dir }}/web/bin/indigo create -c settings"

- name: Collect static
  command: "{{ install_dir }}/web/bin/python {{ install_dir }}/web/project/manage.py collectstatic --noinput"

- name: Initialise Django database
  django_manage: command=syncdb app_path="{{ install_dir }}/web/project" virtual_env="{{ install_dir }}/web/"

- name: Set up database
  command: "{{ install_dir }}/web/bin/python {{ install_dir }}/web/bin/indigo create"

- name: Create default users
  script: init_user.expect "{{ install_dir }} {{ item.user_name }} {{ item.password }}"
  ignore_errors: yes
  with_items:
    - { user_name: indigo, password: indigo }
    - { user_name: guest, password: '' }

- name: Create default groups
  command: "{{ install_dir }}/web/bin/python {{ install_dir }}/web/bin/indigo group-create {{ item.group }} {{ item.user_name }}"
  with_items:
    - { user_name: indigo, group: indigo }
    - { user_name: guest, group: guest }

- name: Install packages for LDAP
  apt: pkg={{ item }} state=installed
  with_items:
    - python-dev
    - libldap2-dev
    - libsasl2-dev
    - libssl-dev
  sudo: true
  when: LDAP_SERVER_URI is defined

- name: Install LDAP modules
  pip:
    name={{ item }}
    virtualenv="{{ install_dir }}/web"
  with_items:
    - python-ldap
  when: LDAP_SERVER_URI is defined

- name: Start nginx
  service: name=nginx state=restarted
  sudo: true

- name: Start the Indigo web service
  service: name=indigo-web state=started
  sudo: yes
  register: indigo-web-installed
